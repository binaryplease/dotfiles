* Appearance
  Removes the menu,tool and scrollbars along with the splash-screen.

  #+BEGIN_SRC emacs-lisp
  (menu-bar-mode -1)
  (tool-bar-mode -1)
  (scroll-bar-mode -1)
  (setq inhibit-splash-screen t)
  #+END_SRC

* General Options
  Enable relative line numbers, disable the creation of file-backups when editing.

  #+BEGIN_SRC emacs-lisp
(global-hl-line-mode 1)
(setq make-backup-files nil)
(setq-default display-line-numbers 'relative
    display-line-numbers-current-absolute t)
  #+END_SRC

* Packages
** Melpa
   #+BEGIN_SRC emacs-lisp


(require 'package)
(let* ((no-ssl (and (memq system-type '(windows-nt ms-dos))
                    (not (gnutls-available-p))))
       (proto (if no-ssl "http" "https")))
  (when no-ssl
    (warn "\
Your version of Emacs does not support SSL connections,
which is unsafe because it allows man-in-the-middle attacks.
There are two things you can do about this warning:
1. Install an Emacs version that does support SSL and be safe.
2. Remove this warning from your init file so you won't see it again."))
  ;; Comment/uncomment these two lines to enable/disable MELPA and MELPA Stable as desired
  (add-to-list 'package-archives (cons "melpa" (concat proto "://melpa.org/packages/")) t)
  ;;(add-to-list 'package-archives (cons "melpa-stable" (concat proto "://stable.melpa.org/packages/")) t)
  (when (< emacs-major-version 24)
    ;; For important compatibility libraries like cl-lib
    (add-to-list 'package-archives (cons "gnu" (concat proto "://elpa.gnu.org/packages/")))))
(package-initialize) 

   #+END_SRC


** Installed Packages
   
*** Company mode
    #+BEGIN_SRC emacs-lisp
 (require 'company)
  (global-company-mode t)
(add-hook 'after-init-hook 'global-company-mode)
    #+END_SRC

*** Evil Mode
    #+BEGIN_SRC emacs-lisp
  (require 'evil)
  (evil-mode 1)
    #+END_SRC

*** Yasnippet
    #+BEGIN_SRC emacs-lisp
(require 'yasnippet)
(yas-global-mode 1)


  (defun check-expansion ()
    (save-excursion
      (if (looking-at "\\_>") t
        (backward-char 1)
        (if (looking-at "\\.") t
          (backward-char 1)
          (if (looking-at "->") t nil)))))

  (defun do-yas-expand ()
    (let ((yas/fallback-behavior 'return-nil))
      (yas/expand)))

  (defun tab-indent-or-complete ()
    (interactive)
    (if (minibufferp)
        (minibuffer-complete)
      (if (or (not yas/minor-mode)
              (null (do-yas-expand)))
          (if (check-expansion)
              (company-complete-common)
            (indent-for-tab-command)))))

  (global-set-key [tab] 'tab-indent-or-complete)

    #+END_SRC

*** Org Bullets
    Make the bullets in Org-mode look nicer with UTF-8 characters
    #+BEGIN_SRC emacs-lisp
(require 'org-bullets)
(add-hook 'org-mode-hook (lambda () (org-bullets-mode 1)))
    #+END_SRC

*** Org Mode
    Spap ; and : 
    #+BEGIN_SRC emacs-lisp
(define-key evil-motion-state-map ";" 'evil-ex)
(define-key evil-motion-state-map ":" 'evil-repeat-find-char)
    #+END_SRC

*** Flycheck
    Syntax checker/linter
    #+BEGIN_SRC emacs-lisp
(add-hook 'after-init-hook #'global-flycheck-mode)
    #+END_SRC


*** lsp-mode
    LSP support
    #+BEGIN_SRC emacs-lisp
(require 'lsp-mode)
    #+END_SRC


*** lsp-ui
    lsp-mode additions
    #+BEGIN_SRC emacs-lisp
(add-hook 'after-init-hook #'global-flycheck-mode)
    #+END_SRC
   
*** lsp-java
    #+BEGIN_SRC emacs-lisp
(require 'lsp-java)
(add-hook 'java-mode-hook #'lsp)
    #+END_SRC

*** ivy
    Use ivy for selecting things, also add recent files and bookmarks to the list and set a custom date format.
    #+BEGIN_SRC emacs-lisp
(ivy-mode 1)
(setq ivy-use-virtual-buffers t
            ivy-count-format "%d/%d ")
    #+END_SRC

*** which-key
    Display help on partially entered commands (prefix)
    #+BEGIN_SRC emacs-lisp
(which-key-mode)
    #+END_SRC
    
*** spaceline
    Show a nicer mode-line
    #+BEGIN_SRC emacs-lisp
(require 'spaceline-config)
(setq powerline-default-separator 'slant)
(spaceline-spacemacs-theme)
    #+END_SRC
    
