* GUI Elements
Removes the menu,tool and scrollbars along with the splash-screen.

#+BEGIN_SRC emacs-lisp
  (menu-bar-mode -1)
  (tool-bar-mode -1)
  (scroll-bar-mode -1)
  (setq inhibit-splash-screen t)
#+END_SRC

* General Options
Enable relative line numbers, disable the creation of file-backups when editing.

#+BEGIN_SRC emacs-lisp
(global-hl-line-mode 1)
(setq make-backup-files nil)
(setq-default display-line-numbers 'relative
    display-line-numbers-current-absolute t)
#+END_SRC


* IDO (Interactive Do)

#+BEGIN_SRC emacs-lisp
(setq ido-everywhere t)
(setq ido-enable-flex-matching t)
(setq ido-use-filename-at-point 'guess)
(setq ido-create-new-buffer 'always)
#+END_SRC



* Packages
** Melpa
#+BEGIN_SRC emacs-lisp


(require 'package)
(let* ((no-ssl (and (memq system-type '(windows-nt ms-dos))
                    (not (gnutls-available-p))))
       (proto (if no-ssl "http" "https")))
  (when no-ssl
    (warn "\
Your version of Emacs does not support SSL connections,
which is unsafe because it allows man-in-the-middle attacks.
There are two things you can do about this warning:
1. Install an Emacs version that does support SSL and be safe.
2. Remove this warning from your init file so you won't see it again."))
  ;; Comment/uncomment these two lines to enable/disable MELPA and MELPA Stable as desired
  (add-to-list 'package-archives (cons "melpa" (concat proto "://melpa.org/packages/")) t)
  ;;(add-to-list 'package-archives (cons "melpa-stable" (concat proto "://stable.melpa.org/packages/")) t)
  (when (< emacs-major-version 24)
    ;; For important compatibility libraries like cl-lib
    (add-to-list 'package-archives (cons "gnu" (concat proto "://elpa.gnu.org/packages/")))))
(package-initialize) 

#+END_SRC


** Installed Packages
   
*** Company mode
#+BEGIN_SRC emacs-lisp
 (require 'company)
  (global-company-mode t)
(add-hook 'after-init-hook 'global-company-mode)
#+END_SRC

*** ido grid mode
#+BEGIN_SRC emacs-lisp
(ido-grid-mode 1)
#+END_SRC

*** Evil Mode
#+BEGIN_SRC emacs-lisp
  (require 'evil)
  (evil-mode 1)
#+END_SRC

*** Yasnippet
#+BEGIN_SRC emacs-lisp
(require 'yasnippet)
(yas-global-mode 1)


  (defun check-expansion ()
    (save-excursion
      (if (looking-at "\\_>") t
        (backward-char 1)
        (if (looking-at "\\.") t
          (backward-char 1)
          (if (looking-at "->") t nil)))))

  (defun do-yas-expand ()
    (let ((yas/fallback-behavior 'return-nil))
      (yas/expand)))

  (defun tab-indent-or-complete ()
    (interactive)
    (if (minibufferp)
        (minibuffer-complete)
      (if (or (not yas/minor-mode)
              (null (do-yas-expand)))
          (if (check-expansion)
              (company-complete-common)
            (indent-for-tab-command)))))

  (global-set-key [tab] 'tab-indent-or-complete)

#+END_SRC

*** Org Bullets
    Make the bullets in Org-mode look nicer with UTF-8 characters
#+BEGIN_SRC emacs-lisp
(require 'org-bullets)
(add-hook 'org-mode-hook (lambda () (org-bullets-mode 1)))
#+END_SRC

*** Flycheck
    Syntax checker/linter
    #+BEGIN_SRC emacs-lisp
(add-hook 'after-init-hook #'global-flycheck-mode)
    #+END_SRC


*** lsp-mode
    LSP support
    #+BEGIN_SRC emacs-lisp
(require 'lsp-mode)
    #+END_SRC


*** lsp-ui
    lsp-mode additions
    #+BEGIN_SRC emacs-lisp
(add-hook 'after-init-hook #'global-flycheck-mode)
    #+END_SRC
   
*** lsp-java
    #+BEGIN_SRC emacs-lisp
(require 'lsp-java)
(add-hook 'java-mode-hook #'lsp)
    #+END_SRC

